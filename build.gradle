buildscript {
    ext {
        springBootVersion = '2.5.4'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.jaxel'
    version = '0.0.1-SNAPSHOT'
    // https://github.com/gradle/gradle/issues/16857
    sourceCompatibility = JavaVersion.VERSION_17

    configurations {
        compileOnly {
            extendsFrom annotationProcessor
        }
    }

    repositories {
        mavenCentral()
    }

    ext {
        set('springBootVersion', "2.5.4")
        set('springCloudVersion', "2020.0.3")
        set('awsV2SDKVersion', "2.17.42")
        set('localstackVersion', "1.16.0")
        // decided not to use Spring Cloud AWS due to low activity at the lib and legacy AWS SDK used (1.1)
//        set('springCloudAWSVersion', "2.3.2")
    }


    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-actuator'

//        implementation 'org.springframework.cloud:spring-cloud-config-server'
//        implementation 'org.springframework.cloud:spring-cloud-starter-loadbalancer'
//        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'


        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'

        testCompileOnly 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testImplementation "org.testcontainers:testcontainers:${localstackVersion}"
        testImplementation "org.testcontainers:localstack:${localstackVersion}"
        testImplementation 'cloud.localstack:localstack-utils:0.2.15'
        testImplementation "org.mockito:mockito-core:3.12.4"
        testImplementation 'org.mockito:mockito-junit-jupiter:3.12.4'

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.7.0'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.boot:spring-boot-dependencies:${springBootVersion}"
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "software.amazon.awssdk:bom:${awsV2SDKVersion}"
        }
    }
}

bootJar {
    enabled = false
}
